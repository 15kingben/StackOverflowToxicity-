I highly encourage anyone that is serious about learning programming to join the Discord server. The pros and mods are extremely dedicated to helping people out as much as possible, and some also do frequent live stream teaching sessions upon request.
I had no idea there was a discord server for this. What sort of experience level is typical? I'm a CS graduate, so I'm just wondering if it is very beginner focused or if it ranges widely? 
Thanks for getting us back up and running so fast /u/islandidealist !
Big thanks to /u/islandidealist and all the mods and pros for getting a new server together so fast! Sincerely, the Meme Lord
Please don't spam me, I'm not the Kyle you're looking for.
Very unfortunate what happened with the old server, but glad to see the new one is doing great. Would love to see everyone get back there once more, this time with a trustworthy owner :)
Oh wow I didn't even realize we had a discord server. This is awesome!
If I'm a total beginner, like just started learning ruby the other day... can I join in on this? Sounds like a good idea being around other people learning like I want to! 
The post should be updated to just contain information about the discord server about this point or deleted and the information added to the sidebar.No one cares about the  drama at this point.
Is there any etiquette for a newbie programmer? With the amount of questions I have I'm worried about annoying people..
Just signed up and chatted to some really friendly people. I'll definitely be spending some time there.
Oh wow thank you! I was just hacking on some homework and decided I'd pop onto Discord and thought I had been booted for being inactive or something :( good to know that's not the case! See y'all online!
Just wanted to say thank you! I just started to learn all of this and am working on the Harvard course on EDX CS50. I will use this to learn as much as I can and pass knowledge or perhaps help on collaborations! 
Why discord and not irc+matrix?
Wow I had no idea this was even a thing, I'll definitely be joining
So, even if I just started learning, is this still recommended?
Huh, I was just wondering why it had disappeared from my servers list.
Was there also a Slack server at some point?
Commenting to save for future reference 
Any chance I can get in on this?  Discord says invite is invalid/expired.
It says the link is invalid or has expired. How can I join?
i'd love to join too, but the invite link is expired :(
Didn't know that, i would love to join you all :) 
I just joined the Discord server. I'll be starting my educational journey in January at University.  I hope to learn a lot and to pay it back by contributing a lot too. 
Hi All,I am currently applying to Coding Bootcamps in NYC. I been accepted to Dev Bootcamp, General Assembly and Startup Institute but I am not sure which one to join. I have read some mixed reviews from from all three bootcamps. Any recommendations?
I know I'm a little late to the party to join this server, but can I get in on this?  The invite link seems to be busted, at least on mobile.
It seems like it's mostly empty? 
I joined under Ghostlight but I'm not sure how to add myself as a 'Developer' or equivalent Member rank.
How many people here are from DBots or DAPI?
[deleted]
I was wondering how many are from europe and how many from the US. It would be nice to know when people are online and when other interesting stuff is happening.
[deleted]
I don't even know what a discord server is. Are we in the realm of private chat room here? That sounds like an excellent thing, I'm in
Friends don't encourage friends to put their data and metadata at risk.
I have only a very basic knowledge of c and python2, do I have a place here? I'm very willing to learn
Ranges from beginners to experts! Everyone is welcome!
do you know functional programming paradigm?
Yep, awesome job :)
I feel like this thread lends to an unfair portrayal of us Kyles.  TRIGGERED  (just kidding, of course :3)
Of course you can join! We welcome users from a very wide range of skill sets. 
I'm learning ruby aswell at the moment. What resources are you using?
Most likely ease of setup and being fairly well known. I've never heard of matrix before.
At the risk of being off-topic, I'll say that it's a shame that even non-profit programmers themselves aren't favoring open source alternatives nowadays.That said, Discord is pretty snappy!
For sure! 
Just hit save
The invite link shouldn't be broken, what error are you seeing?
Shouldn't be! What's your username on Discord?
That's just our spammer filter, takes a couple minutes to get in.
I added you! Sorry, our bot must have missed you. 
Because voice
The hundreds (yes, hundreds) of people who were on the server disagree with you. 
It's kind of like a private chat room, but much better. It's essentially Skype and Teamspeak combined into one application, [check it out here.](https://discordapp.com/)
... What?
Yes, please explain.
Old comment, but I guarantee you slack has questionable phrases about your data in their ToS. It's basically a necessity to prevent frivolous litigation for online applications. 
Absolutely, everyone is welcome!
Good to hear. It sounds fun.
What's it like for kids wanting to learn?  Foul language? Biased against females?  My daughter likes programming, and she's taking classes in school, but probably could use help.  
I do, yeah. I used OCaml in my CS program and I have messed around with compilers recently. You should join the discord server. There are a few people in there who are quite knowledgeable about it. 
I honestly tried irc chats for a while and could never stick with them. I joined a slack group recently and it was much easier and convenient. Discord is good too and the voice chat on it is awesome
He's probably saved a lot of threads already using that feature; making it hard to navigate and search. Probably why he/she instead chose to comment. 
Strange.  Told me the server didn't exist last night, worked just fine now.
Thanks again!
[deleted]
[deleted]
We accept users from all ages. The mod team and I try our best to maintain a safe and mature environment for all users. We actively moderate the channels, and I also have a bot that filters unwanted language. Any user that sees/feels uncomfortable with what is being discussed in the channels should either message a mod or me immediately. 
The server is not up again though, /u/islandidealist had to create a new server completely unrelated to the old one. :/ That's why he also posted it on reddit, so people would find the new server. And so people would know what happened and not blame it all on him and never trust him again, since it wasn't his fault.
Main difference with Slack is the fact that you have vocal channels in addition to text ones.Also, you usually have one account that you use on multiple servers, not one per server/team.(Basically, it is geared more toward gamers/communities than teams/enterprise)
Thanks, mate.  
Slack has voice channels now.But Slack costs money.Tbh if it wasn't for the gamers focus, I'd recommend Discord over Slack for dev teams.
what's wrong with the gamers focus? it's not like it's up in your face, and if reddit wouldn't have told me, i wouldn't have known
slack doesn't have voice channels, it has calls. a little different.
Personally I don't think there's anything wrong.Also if you Google 'Discord' the link which comes up is Discord - Free Voice and Text Chat for Gamers
Ohh okii
I think some of these answers are pretty ambitious for your first few programs in a new language. I try to hit various aspects of the language spec in basic ways. I also like to screw them up on purpose to see what the error messaging is like and how to handle exceptions.Here are some ideas off the top of my head:* Basic: Hello World * Type casting: return int with reversed digits of int input* Map: return a dict of letter counts in a string* Recursion: Fibonacci* Pattern matching: extract phone numbers from a text file* DB: parse CSV and store in (no)SQL db* Net: API endpoint that returns aggregate results from multiple external API request (use some sort of concurrency for requests and/or aggs?)* Data structures, text input: tic tac toe, battleship, or some similar game* Graphics, visual input: flood fill, line drawing, A* pathing, or somesuch* Data statistics: calc mean, max, min, 95% from a time series dataset for various time intervals (and graph them?)
HelloWorld, LinkedList, File I/O, something with concurrency, networking (tcp/udp). The last two could be hard depending on the language
Definitely hello world, I would do a gross pay program as well (have user enter hours, pay rate, and overtime amount. If hours are greater than 40, then calculate gross pay with overtime. Overtime should only be used on hours more than 40. Example: I worked 41 hours at $10/hour and overtime is say 150%. That would be 400 for the first 40 hours. Then, after calculating overtime for 1 hour, add the 2 together. The total would be $415.)
Randall Munroe of XKCD suggests doing [Project Euler](https://projecteuler.net/) when learning new languages.  It's a pretty good way to learn about things like handling really really big numbers and data structures and such.  
I usually do [learntris](https://github.com/LearnProgramming/learntris).It's of sufficient complexity that I get to get a good feel for the language and learn how it works, short enough I can learn the language over just a couple of days, and being guided keeps it short. And *it's fun*.This is probably a better way to learn a *new* language after you've already done it a few times. Otherwise, it's a good project to just learn to program. ;)
I'd implement hello world, mergesort, some class trees if it's object oriented, something list related (the last two can be combined), an http Server (using libraries, to get to know how adding libraries works), some kind of message send/receive for other network related stuff, a small UI. Also, something using threading
* [Hello World](https://rosettacode.org/wiki/Hello_world/Text): Useful for sanity-checking your development environment. This answers the question, Can I execute code in this language? It also gives you an example of how to print to the console, which is useful for debugging.* [FizzBuzz](https://www.rosettacode.org/wiki/FizzBuzz): Gives you an example of how to loop and write conditional statements in the language.* Shopping Cart: Continuously prompt the user to input an item. An empty line indicates they are finished. Store their input in an array. Print the list to the screen when done. Bonus: Write the list to a file.* Word Counter: Use a hash table/dictionary/associative array to find the most frequently used words in a document. Exclude [stop words](http://xpo6.com/list-of-english-stop-words/). Download a book or two from [Project Gutenberg](https://www.gutenberg.org/) for analysis. When working on this challenge, write functions to create reusable chunks of code. (e.g.- Store your stopword list in a file, use the same function to read in the stopword list and the text for analysis.)* Address Book: Practice simple object-oriented programming by creating a Person class with the following attributes: name, age, address, email, phone number. An array of people objects represents the Address Book. Have the source of this data come from a CSV file. Create an interface to allow you to search the array of people objects by name. Keep the logic for loading the CSV file and creating the address book in a separate file from the Person class.After completing these challenges, you will have examples of most of the important features of any given programming language. * variable assignment* looping* conditional statements* declaring functions* getting user input* printing to the console* file i/o* working with arrays and associative arrays* defining classes* organizing code into separate files
1) Write programs that help yourself.2) Write programs to help people you know.3) Help programs to help the world.
Palindrome number, factorial 
I think it depends on what you're looking for. A hello world is useful to check the installation/environment, without having to worry about the code too much.Then, there is no list of programs that follow because it depends on what you want to achieve with the programming language you're learning and it's features. Arguably, one could write a program that teaches you quite a lot of the standard features of the programming language, especially if it is not a big programming language.But, for a standard (i.e. not declarative, functional) programming language, you should focus on learning skills, like declaring a function, making a class with a constructor, the basic data types, more complex data types (such as arrays), and so on.For all of these you can write proof of concepts, small pieces of code that show their usage.Unfortunately, these might not translate so well between languages. For example, C has no classes.In the end it's too personal and too language specific for it to be a definite list of programs that you should write when starting. Also, I believe there is no need for it. Considering it's not your first programming language, go have a play with your new toy. You'll figure out what you need.
Part of the standard features of the programming language, go have a play with your new toy.
When learning new frontend frameworks I usually do the following:* Hello World* Buttons with alerts* Todo list* Todo list with database connectionThis list ends up usually covering most of the basics: templating, event handlers, form input, validation, http.
Anything that interests you from this reddit post:[1000+ Beginner Programming Projects \(x-post /r/programming\)](https://www.reddit.com/r/learnprogramming/comments/2a9ygh/1000_beginner_programming_projects_xpost/)
CRUD (Create, Update, Delete) database maintenance (use some flavor of SQL)
Log rolling. Save a log file with date/time. Also delete old logs.
If you're picking up a framework along with the programming language, you're going to build a To Do List app.Why?  Because nearly every framework tutorial on the internet has you build a To Do List app :|
He said 1.5% which is useful for debugging.
Guess everyone does it different, I make games, 4 games at that:Tetris -> Breakout -> R-Type (the last language I did, I did flappy bird instead ...) -> MarioI have learned about 15 languages using this.I still know C/C++/Ruby best though since I use C++ and Ruby daily and I learned C in 1985 ...
He said 1.5% which is not a big programming language.
Doesn't matter. Just practice and learn.
Thanks! This was the exact kind of thing I was looking for!
Motherfucker hitting the nail on the head. Good job 
That's it, I'm giving up trying to learn programming now. It's just not going to happen. 
Once you get the hang of these, research some unit testing/test automation stuff and try to write some unit tests and functional tests against the above scenarios. Sometimes, writing code that breaks code gives you interesting insights into how to write robust code. 
> parse CSVThat can be a pretty complicated piece of code if you handle quoting, BOM/character encodings, and line endings correctly.
Isn't recursion with Fibonacci a bad idea? 
> The last two could be hard depending on the languageAt that point it's worth playing to the language's strengths. Part of the larger skillset is picking the right tool for the job rather than Maslow's hammering your problems.
You mean 150% or a x1.5 multiplier
this was my very first big project. just started to learn javascript and html/css. made it for myself and my friends. www.drillingwagecalculator.comedit: just did this few weeks ago.2nd edit: does anybody know how to make the image center for both mobile and desktop? if i center on either platform the other is not. 
I agree, love Project Euler, but recommend only for intermediate+ programmers. Not a great idea for beginners, too frustrating.
4) Write programs to hello the world.
And Replicate (i.e. copy an existing entry to a new entry)? I'm not sure, but I thought this was part of CRUD... 
I found an excellent website that has a decent list of challenges geared, recommended from this sub, they are challenging, and you can't look at the answers until you have solved them: codeabbey.com
Don't give up, you can do it! 
Ive been learning for a year or so, and i dont know where i would even begin on some of these, but its fun, so fuck it, right?Dont let the frustrating parts eclipse those moments where something clicked and you felt that sense of understanding wash over you. You cant have those moments without the frustrating parts. The more fucked up and frustrating and impossible you think it is, the better it feels when you finally figure something out. Ive been struggling with the Win32 API for the last few months, and yesterday i figured something out that had me stumped. Its probably someyhing that a lot of other programmers would go well, yeah... DUH..., but it just clicked for me. Now *I* know it, and thats all that matters.If its something you want to learn, then keep doing it. You will never regret not quitting something.Except smoking and killing people. Quit those.
I wouldn't use this list as a judge for that. The last four I listed are reasonably more complex, which is why I put them last. Also, if you want to do front end or web development a lot of this stuff isn't so important. I assumed that since it's asking about learning another language it wouldn't be for a beginner since you need at least one under your belt first.
As a fairly experienced programmer, that list reads to me as the first programs you would make when learning your second+ programming language, not when learning your first. When you're learning your first language, the list has only one entry:- Whatever interests you
Just realized this typo, thanks!
This is the same. I think you are asking if he means (hours x1.5) or (hours +hours x1.5). With what he calculated this is clearly seen he means the first ;)
Looked at the source and saw this lol> //MOTHER FUCKING MISSING BRACKET ON NUM3 VARIABLE TOOK ME 1 HR TO FIND OUT FFS lol//
Use Bootstrap
I think the limitation with solving Project Euler problems is often math knowledge / problem solving ability, rather than software engineering ability. Not that there isn't usually a correlation between the two, but some Project Euler problems can't be solved regardless of how much you know about software engineering unless you have (or are willing to learn) special information about numerical relationships.Then again, I guess if you're *constantly* using project Euler to learn new languages, you're probably already very familiar with the math required to solve your x number of go-to Euler problems, so maybe in that case it's effective.
I am just starting to learn c++, and I made a loop that printed doot. Well I was bored so I was like how fast can my computer print 'doot' 100,000 times? (spoiler, quickly).I realized, holy cow, I printed doot A HUNDRED THOUSAND TIMES. Was that the most times that's been printed in that day? In this year? Computers are really powerful at certain things... That could very well be the single greatest accumulation of doots for that day in the entire world.
RemindMe! 4 hours
RemindMe! 4 months
He said 1.5% which is not the same as 150% or a multiplier of 1.5.
Going to second this. Project Euler is more about math smarts than programming smarts, but also requires programming smarts.
I will be messaging you on [**2017-02-12 05:21:54 UTC**](http://www.wolframalpha.com/input/?i=2017-02-12 05:21:54 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/learnprogramming/comments/5tgfu7/what_are_the_first_5_to_10_programs_you_should/ddmsr9t)[**2 OTHERS CLICKED THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[https://www.reddit.com/r/learnprogramming/comments/5tgfu7/what_are_the_first_5_to_10_programs_you_should/ddmsr9t]%0A%0ARemindMe!  4 hours) to send a PM to also be reminded and to reduce spam.^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Delete Comment&message=Delete! ddmsrw9)_____|[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=Reminder&message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&subject=List Of Reminders&message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/)|-|-|-|-|-|-|
Oh... Sorry, I missed that :/
Agreed. Your life is a lot easier if you use complex math, but good programming skills are important too and in most of the easier ones you can bruteforce it and still gain good programming experience without too much math.
Try intellij. See if you like it. If you do. Use it.
PyCharm is pretty nice, has a lot of webdev tools integrated in the IDE, such as Django support.
If you ever dip your toes into the .NET side of things, Resharper is a godsend to Visual Studio. Even as the VS team has improved the built-in refactoring there is still no comparison. JetBrains has always been a step ahead.Resharper installs into the (free) VS community edition, though as a student you likely have access to a better version of VS anyway.Their other .NET offerings are solid as well. dotCover (code coverage), dotTrace and dotMemory (profilers), and dotPeek (disassembler/assembly browser) are all excellent.Really, if you have full access to JetBrains products, you can't go wrong checking any of them out. All their stuff is high quality.
I use Webstorm for my NodeJS development, it works really well.CLion seems pretty good for C++ too.
Seconding IntelliJ, it has Eclipse beat dead to rights in speed and resource usage. Definitely check it out!
Resharper is jetbrains
I didn't like intellij until eclipse pissed me off. Dunno about dead to rights. A lot of people use both
It sure is! :)
Looks like netbeans. In NetBeans you can just create another type of project that will give your application a GUI. Have a play. 
> how would I go if i wanted to make a gui (window) that lets you enter a range that you want to find numbers between and also a button that calculates.You can do that with Swing or JavaFX (javaFX is newer and has more features). Installing scene builder will make it even easier. Have a look [here](https://docs.oracle.com/javafx/2/get_started/jfxpub-get_started.htm)Btw, if you want an IDE I would highly recommend checking out IntelliJ. 
Don't know Java, but have a little experience with GUI programming with the Qt (c++) and GTK+ (c) tool kits, so maybe I can give you an overview of GUI programming that might be helpful.Typically, in GUI programming you are going to create a window (also called a dialog) and populate it with widgets (also called controls). These widgets are the graphical elements on the window such as buttons, labels and entry fields. You would then write callback functions that run when an event, such as the user clicking a button, occurs. These functions are then connected to an event for one of the widgets. For example, you might have a function called calculatePrimeNumbers() that is connected to the click event for a button labeled calculate.So one way to write the program you describe is:1. create a new window2. populate it with the following widgets   a. label that displays Enter a range of numbers   b. a text entry to allow the user to enter the first number   c. a text entry to allow the user to enter the second number   d. a multi-line text area to allow you to display the results   e. a button the user clicks to calculate the prime numbers   f. a button the user clicks to exit the programYou would either create this text by hand in code, or use a graphical drag & drop user interface designer. Also you will need to layout out your controls. How this is done varies between toolkits. Both Qt and Gtk use layout boxes. Layout boxes are invisible containers that hold widgets. The layouts allow widgets to be placed in a horizontal row, placed in a vertical row, or layed out in a grid.3. Write callbacks for each event you wish to handle (a callback is function/method that runs in response to    a user action such as clicking a button).4. Connect the callbacks to an event & widget. For example, you would connect your calculate function to    the clicked event on the calculate button.5. Next you create the main function. Usually, this function will:   a. initialize the GUI framework   b. create your window object   c. show your window   d. enter the event loop (once in the event loop the program waits for the       user, then responds to user actions)It looks like NetBeans uses the Java Swing toolkit. You might find it easier to start by learning the Swing toolkit by itself by hand coding a few simple GUI programs. Going this route will help you to learn the basic concepts of the Swing toolkit without adding the complexity of trying to learn the NetBeans IDE at the same time (IDE can be complex and can have a step learning curve). Once you have the basic concepts down, the IDE will make more sense and be easier to learn.A good first step would be to find and work through some simple Swing tutorials. I would recommend trying to find tutorials that show you how to create the interface directly with code and not with a graphical interface designer. So to start, you don't need anything but a text editor and the Java SDK.
definitely looks like netbeans
He literally says, I've loaded up our program here in Net beans. @4:23
I am not familiar with Java, but typically you create a GUI by creating objects. Generally, it will go something like this.    // Create a new window    Window win = NewWindow(title, xsize, ysize);        // Create the widgets that go in the window    Label lbl = NewLabel(Enter the range of numbers below);    TextEdit lowNumber = NewTextEdit();    TextEdit highNumber = NewTextEdit();    Button calculate = NewButton(Calculate);    Button exit = NewButton(Exit);Once you have created the widgets that make up your window, you would then add them to your widow. How you do this will vary with different toolkits. In the tool kits I am familiar with, you do this with layout. Layouts are invisible containers that arrange widgets.    // Create the layouts    VerticalLayout mainLayout = NewVerticalLayout();    HorizontalLayout inputLayout = NewHorizontalLayout();    HorizontalLayout buttonLayout = NewHorizontalLayout();Now you would add the widgets to the layouts. You will usually nest layout to get the look you want. For example:    +-----------------------------------------------+    |  mainLayout                                   |    |  lbl                                          |    | +-------------------------------------------+ |    | | inputLayout                               | |    | | lowNumber        highNumber               | |    | +-------------------------------------------+ |    | +-------------------------------------------+ |    | | buttonLayout                              | |    | |    calculate                exit          | |    | +-------------------------------------------+ |    +-----------------------------------------------+        // Add widgets to layouts    // Add TextEdits    inputLayout.addWidget(lowNumber);    inputLayout.addWidget(highNumber);        // Add buttons    buttonLayout.addWidget(calculate);    buttonLayout.addWidget(exit);        // Put all layouts in mainLayout    mainLayout.addWidget(lbl);    mainLayout.addLayout(inputLayout);    mainLayout.addLayout(buttonLayout);        // Add the main layout to the window    win.addLayout(mainLayout)The above is how the GUI would be created in code. I don't know about Swing, but GTK+ and Qt also allow you to create a XML file that describes the user interface. The XML file is then used by the program to create the UI. While you can hand code this XML UI description, it is typically created by a graphical UI designer (Qt Designer for Qt or GLADE GTK+).I would still recommend that you first create a few simple GUIs by hand, then learn the graphical UI designer. If you do a few by hand first, the graphical UI designer is going to make a lot more sense and be easier to learn.
He mentions the name of the program he uses (NetBeans) at the 4:25 min. timemark
[NetBeans](https://netbeans.org/), the best Java IDE!
IntelliJ is pretty impressive. I haven't programmed in a few years and just got back into it. Had no idea IDEs were so advanced. Makes everything quicker. Also makes it easier to not remember certain peculiarities of syntax...not that that's the IDE's fault!
What markup is usually used for the front end  for desktop applications?
Thanks for this high level view.
That may not mean anything to a beginner though. 
Great answer
Yeah right? I was a long time eclipse fan, which already was a huge plus coming from notepad. But intellij is another level
UIC (Qt Designer), QML (Qt Creator) or XAML (Visual Studio/WPF) are what I have seen the most. Some developers prefer to create their GUI programmatically rather than use a designer, however. 
Depends on the platform. For Windows it's XAML.
What can IntelliJ do that eclipse can't? Is there any feature I'd lose by switching over to it?
It indexes the world, meaning it's autocompletion is somewhat better than eclipse. For me debugging also felt stronger. The only thing that was worse for me were the hotkeys, but that's, of course, changeable. Try it out for a week+, it's free. Every single developer I know prefered IntelliJ for Java.   So yeah try it out (and love it :) ) 
I think the best framework would be the one that's most related to the previous knowledge that the beginner had learned. if the beginner has previous knowledge or experience, then the learning would be smoother and he will hopefully learn at a quicker pace.&nbsp;  
I mean you might be putting this in 'vanilla javascript', but how about JQuery? I mean JQuery is pretty much assumed knowledge for all web JS developers. After that probably Bootstrap and React.
Wow I read 2017 in the post title and it hit me that it's not 2005 anymore.More relevantly, I would also choose AngularJS. If this is what you know best, I think this is probably where this person would learn the most. That is, assuming you know the ins and outs of this framework better than React/Redux/etc. I'd also consider teaching the design patterns (MVC, Singleton, Factory, whatever) *before* teaching the framework itself. I think it would be easier if an understanding of the AngularJS implementation came after the understanding of why they're necessary and when they are considered good design. AngularJS was also the first framework I learned after learning basic JavaScript (ES6) and I found it easy enough to learn.Also, good on you for teaching others. I remember learning most of this by myself and always having 40 tabs open. Replacing all that with just one knowledgeable and understanding person would have been priceless.
What if they have zero programming experience except for HTML/CSS? This is my pickle.  I am leaning towards AngularJS as I know it, and its more structured so it leaves with less decisions to make.  I also know that React is booming on the job market, while AngularJS is staying the same, or even dwindling a bit.  So I also would like to teach them React.  But upon looking at React, it seemed pretty advanced and may be difficult for absolute beginners to grasp syntactically.  Thats why I am leaning towards AngularJS.  I am having difficulty choosing between the two
Yeah, I'd definitely go with jQuery. Not a fan of Bootstrap because it's a bit bloated for my tastes, but I'll second React.js.Lots of jobs in big companies for Angular, but I think React's more useful to know at first - leaner and easier to implement parts of it.
Sorry I should of mentioned it, jQuery will definitly be taught after vanilla JavaScript.  You cant build a clean web app in jQuery.  I was moreso asking what Framework for developing web apps would be easier for a beginner with zero programming experience to learn.React you say?  Thanks for your input, I dont know React myself and will check it out! Thanks
It's either should **HAVE** or should**'VE**, but never should **OF**.  See [Grammar Errors](http://www.grammarerrors.com/grammar/could-of-would-of-should-of/) for more information.
Not to be condescending, but the basics are the basics.If you can give us more information about her *specific* area of struggle, we can help. But beyond reading the textbook and looking up How to do BLANK in C++ we can't really help too much. StackOverflow and [cplusplus](http://www.cplusplus.com/) are the best resources for beginners and experts. As far as general understanding....Just tell her C++ is as intuitive as you need it to be.    Rules of C++ Club for beginners:        1. Think before you code.        2. Don't code more than 25 lines without compiling. (for beginners)        3. If you're stuck, read through the problem literally line by line.        4. If you're still stuck, Google it. In general, C++ for beginners could probably be broken down into three core concepts:1. Data types (do you know integers, strings, doubles, arrays, and how to initialize, change, access them?)2. Programming syntax (for loops, while loops, declarations, etc...)3. Logic (know how the program enters and exits functions -- or even just int main())I got through intro C++ without *really* struggling because I read my textbook, did all of my homework, and never gave up until my program was [somewhat] running.     
If she is in university, encourage her to communicate with students, tutors, and the professor. those individuals can provide a lot of assistance while respecting academic integrity.  &nbsp;  Even Stroustrup recommends beginner coders to seek help from friends and fellow coders, when things get hard.
> She's currently taking an intro course... that seems to assume previous knowledge... lacks the fundamental knowledge to complete the projects she's being assigned (and the lecturer isn't teaching them, assuming the students already know).Tell her to go to office hours. This is exactly the sort of thing office hours are there for. She can ask the professor/TA about whatever she's confused by and she can also ask for resources to catch up. The answers will hopefully be more specific to her course and to her situation in terms of what she knows and doesn't know or is confused about. Maybe it turns out the professor can't give appropriate help for whatever reason, but start there.
Check out [CodingBat](http://codingbat.com/java). They have both Java and Python exercises. I've only used the java ones, so I can't vouch for how good the python ones are.
Check out CodeAbbey.com, it starts out very basic (if you follow the list). Forces you to build tools necessary to proceed onto harder problems.
I've done the Python CodingBat exercises, they were pretty good. I'd recommend HackerRank as well.
Saved both CodingBat and HackerRank :) Both look fun!
> CodeAbbey.comI've saved the website, thank you! Looking for others as well :)
it's against Facebook's terms of service, so you're gambling with your account when you do this.Look up Selenium, it's a browser automation package that opens up an actual browser that can be controlled with Python code. Then browse with it and right click on elements in the web page to get CSS Selector (exact terminology varies by browser). This will let you repeatably pull the contents of one type of element in the web page (text post, image, comments, etc)Good luck, Facebook doesn't go out of their way to make this easy and could in fact be working to make it harder.
You're going to have to familiarize yourself with Facebook's Graph API. Try out the Explorer first to understand how it works. Then get the Facebook SDK for Python, it's pretty easy to learn.Keep in mind a few things though: One or two years ago, due to privacy concerns, Facebook removed the ability to pull information from your friends' profiles. You can pull data from public pages, public groups and your own profile. Facebook has a rate limit of 200 requests per hour on their API.The only way you would be able to access your friends' data would be creating an app that requests permission to access that information and they would have to grant it. Keep in mind that for this to work though, you would have to submit your app for review and their guidelines are rather strict.You could pull data from your own profile and scrape comments that friends leave on your posts without a problem. I can't confirm, but I'm pretty sure it's allowed assuming this isn't something that you do every day. It is, after all, public information -to you- because it's your profile.Edit: Oh and, as other people have mentioned, you do need an access token. Just get it using Facebook's Graph Explorer. By default, it's a temporary token that lasts for a few hours IIRC, and if you're going to pull data from your own profile, you have to enable the permissions you want when you get that token.Crawling and scraping from Facebook using other means is highly discouraged and not as effective.
yes Its possible, I saw some code about fb chat bot. please search on github.com
This is a difficult problem to solve, even if one disregards the TOS problem. It requires that you have a browser which can render HTML, JS interpreter + a DOM. Also this browser needs to be able to run your program (whatever is orchestrating the browser needs to tell the browser to click on things, etc). Generally this is done with Selenium, or something like PhantomJS / a wrapper for Webkit (which is the browser).  Then on top of that you have various measures which Facebook has put into place which will attempt to detect if you are doing this. There are a lot of ways that they check this, my assumption is that Facebook has a lot of measures to make sure this doesn't happen. For instance, they can do something simple like grab the browser's request headers and then feed them to a program which (from previous experience) can recognize if this is a Selenium/PhantomJS browser. I'd assume they have many such measures, so chances are you would get your account banned after scraping only a couple of pages.EDIT: All that said, if you were to implement this as a 'Chrome extension' something like this might be possible (I don't think Chrome wants your extension to click on things though...)
So you basically want to spy on people.
I haven't looked in a while, but this should be possible using the Graph API. Am I missing something?
So Facebook has different TOS regarding bots than Twitter does? That is interesting...What if I were to try and do that for some sort of personal use on media sites so that the programm would scan media articles on the date and search for keywords extracting some sort of abstracts and returning them...Would you still recomend Selenium?+ Why are auto-replying bots any different from what i want to do?
What is the differance between doing this and making an automated-reply bot?
Genuine question , is it really spying if he could see the information on his own without the bot anyway ?
That seems about the thing I am looking for but now I don't understand if this can be automatized or does Facebook check the user behing the requests?
People use scripts to delete all of their old posts. Facebook wants to know everything about you.
If you're referring to a FB auto-reply bot, I'd assume that would be done as a Chrome extension. You could implement an FB auto-reply bot by either doing a browser extension or by scraping the site (ie Selenium). Scraping the site is against the TOS / more difficult, Chrome extension requires that a user navigate to the website and that the user has the extension enabled.
It's assumed that anything using an API is automated. In order to use it you'll need an authentication token so Facebook knows who's making the request. I'm just not sure if you can still access your friends' posts via the API. The documentation is pretty good if you want to take a look. If the information you're looking for is available, it'll be pretty straightforward to use the Python requests package to get the information you're looking for
The way I do it is just to take each line, then go char by char. Example, if im looking for the word car, when I find the char 'c' in the string, I check to see if the next 3 chars are 'a' ,'r', and ' ', if so, we found the word car.
Um, why are you using strstr()? std::string has methods for finding substrings... (Including an offset argument to control where in the string to start searching, hint hint).
I'm really new to C++ so I'm not too familar with the string methods. I looked at the documentation and this is what I came up with.                         if (!(line.find(wordToBeFound) == std::string::npos)) {                            findWordCount++;                        }However, it is still producing the same answer. Which, I am assuming, is because it is just checking to see if the word is present in the line rather than how many times it can find it. I'm totally lost rn and don't know how to move from here.
Once you've found the substring, you have to search for it again in the string starting *after* that occurance. Otherwise you just find the same one again and again...
Look at what `find` returns: it tells you where in the string the match was found, or that no match was found.  You can use this to work out where the next search should begin and skip to that point since `find` can take a parameter that tells it to skip over a certain number of characters.
If you only need to install the desktop app on Windows, then go with C# Windows Form. It's fricken awesome (in my opinion). If you want it to run on multiple operating systems, then I guess go with Java. I think the new JavaFX has a GUI to build apps. It's actually pretty similar to writing a HTML page with JS to control the logic.[JavaFX tutorial](https://www.tutorialspoint.com/javafx/index.htm)[Very beginner Windows Form tutorial](https://msdn.microsoft.com/en-us/library/dd492132.aspx).>Also suppose I build him a web app, mobile app and desktop app. Can we synchronise data between all 3? Example suppose a sales person creates an order usinng Mobile app or Web app, can data be sent to desktop app or vice versa ?Well I assume you would store all the data in a database on some central server? You can connect to the database to store and retrieve information. I mean even with a Desktop app, you'd use the internet to connect to the server right? If you really want, you could just make a website and just wrap it in a Desktop app or a Mobile app.
I haven't moved into the desktop myself, but C# would be another option, assuming they're on Windows. Microsoft has moved toward C# and is moving away from C++ for most things.If you want everything to be in sync, I'd imagine you'd want a common database everything talks to...When you were talking about a web app, were you talking about it being hosting on the actual internet? Did you discuss building a web app and hosting it internally? I would imagine that would be just as secure as a desktop app talking to a DB on an internally hosted server. You could also do what everyone else seems to be doing these days, make your web app, wrap it in a window and call it a desktop version.
Hi how would you wrap web app into desktop app? Could you please explain more about it? Is it same way a one would convert web app into mobile app by Cordova or phonegap? Regarding the central server. Could you shed more light on this. For example would a digital ocean droplet work? Ideal case I want to have a server and data in office itself rather than cloud. 
Yes I wanted to host web app securely on a DO droplet.Internal hosting I haven't done anything such before. Can you please tell me how to wrap web app in window to make it desktop version? I want to provide a secure solution than one with duct tapes. 
Internal hosting would be like using DO, except you'd have a server sitting in their building instead of on the DO servers.Another options, rather than DO would be something like DO is AWS or Azure. I think those are both HIPPA compliant. Check into it, but if true, I would think that added security might put them at ease a little, as HIPPA violations cause a shit storm for companies.The easiest way to wrap the website in an app is to use Chrome, but that might be a little too obvious. I haven't done it with Visual Studio, but I'm sure there is info out there on it. Of course these solutions would work in conjunction with self-hosting locally or using AWS/Azure... and you'd want to be transparent on what is being done. It also sounds like it's the security aspect they are worried about, not the interface, so doing this my just be solving a problem that doesn't exist.
Yes security is important concern. Anyway thanks for guidance. Will look into your suggestions. 
Sorry to break it to you, but Java is known and loved for its low entry threshold. It's hard to master, yes (as anything, really), but what you described are the fundamentals, not even intermediate level stuff. They don't involve deep analytical thinking or understanding, they are basic building blocks of abstractions you are building your applications upon. I can immediately see you're getting your terminology all wrong so I wonder what kind of books you're reading.
Maybe programming is just not for you.
> Is the language fundamentally hard to understand?It's a fairly boring language with very few quirks. There is also good tooling available. Netbeans and Eclipse are bulky, but they work great.If you don't understand something (e.g. access modifiers or data types), just reread the chapter. If you don't understand the explanation of one book, try another one.Programming is something you learn by doing. You have to continually write things which are just slightly out of your comfort zone. That's how you get better at this.Your brain automatically retains information which is connected to other bits of information. Learning things which aren't really connected to anything are quickly forgotten. It's basically like garbage collection.That's why it works best if you learn things as-needed when they are super relevant to the problem you're trying to solve.
> Or am I just dumb?No. You're just not putting in an effort to learn. Knowledge like this doesn't just happen; learning takes effort.This is a good resource to learn OO programming with Java: http://mooc.fi/courses/2013/programming-part-1/
> I get stupid errors There are no stupid errors/exceptions like the NullPointer one. It's you using the language wrong. In my experience, there are people loving or hating Java (I love it for being how it is). But really, these problems you describe would apply to all languages you would use.   What kind of books did you read? There are a lot of great ones out there, which would explain everything you mentioned
IMO, Java is one of the easiest to grasp languages because it is *explicit*, *verbose*, and *strongly typed*.It is also a great entry into OOP because it enforces OOP.Take /u/nutrecht's suggestion and go through the MOOC [**Object Oriented Programming with Java**](http://mooc.fi/english.html) from the University of Helsinki, one of the best, if not the best free Java tutorial available. Do all the exercises and take it slowly.If you've been trying for over 2 years, then you have definitely done something wrong. Under normal circumstances, I would say that all your problems don't take more than half a year to learn and to avoid.I wouldn't say that you are dumb. You just might need to take a different route to learn Java.
I would actually say, making a GUI is actually on the harder scale. Oh there are more difficult things, but it's considerably more steep than you'd except, especially if you've never made a GUI from scratch before.**Static** would methods and objects mean there's one of them. Only one. They are created once, before any of the instanced (normal) things are. By that nature, instantiated things can *use static stuff, but not the other way around***Abstract** is, well an abstraction. Say like, food. Food can be eaten- food can be cooked. But it's not really a thing, like an orange, or a steak.And that's the key point behind polymorphism and interfaces- giving you a way to generalize purpose and behavior. As a more specific example, take the *List*.  A list is an abstract. The real implementations are kinds of lists: linked, array list, etc. We could go into long technical detail on the how and why, but there's a lot of tutorials/blogs out there explaining it in different ways. Keep reading those until an explanation makes sense.**Are you dumb?** In a word, yes. We all are. You'll be dumb right up until it clicks. Then you'll be doubly dumb because you'll wonder how you got so confused that you couldn't grasp this seemingly obvious relationship. Just keep up your spirits. A lot of it is like realizing you've got to push a moment when something is stuck that you're trying to pull. 'simple' yet surprisingly intuitive until you catch on. 
A normal method is something each object of a certain class knows how to do. A static method is used to take certain actions on objects usually from different classes, and doesn't need a new object before it can be used. A static variable is a constant of sorts, in that all objects that are part of the class that uses it will contain it at the same value, and when it is changed, it changes in every object of that class.Abstract methods are used as a sort of guideline in a generic class, that reminds the programmer of the sub-class that they should define that particular behavior. (like how an Animal class can have a noise abstract method, that will have to be properly defined if the programmer wants to define a dog subclass).Abstract methods also ensure that the generic class they're defined in cannot be iterated (for example, you're not supposed to be able to create an Animal object, but rather a certain species subclass).As for private and protected methods / variables, keep in mind that a program usually isn't made or maintained by one single person. Sometimes you'd be in charge of creating a base program that a client programmer would then customize for their own needs. You don't always want them to be able to access all the variables and methods in your class, for security or stability reasons.I've had troubles understanding the concepts used in Java too. One book that helped me understand some of the more cryptic or abstract ones is Head First Java. If you don't already have that one in your library, I'd suggest you look it up. Even if it treats an older version of Java, it's still a great reference for the basics.
The issues your running into would plague you in other languages as well, C++ for example.  It's not the language you're having issues with, it's more like software engineering and OO principles in general.When to use things like abstract methods and static members is the hardest stuff to learn because there is an artistic element around how to use them. Not everyone's solution to the problem will be the same, where as stuff like 'for loops' and printing output are much more straight forward to teach.What sets the expert apart from the novice is the expert has already failed at just about everything.
Python won't give you those error messages. It will let you do all those things without telling you. This might make it easier for you to learn, though.It sounds like most of your confusion comes from instantiating an object vs. just using one of its methods.
Did you actually read any of the books you've bought? They should cover stuff like static and abstract methods and such.
>I was expecting myself to make full fledged GUI applications when I started learning Java.Here's the problem, you expected yourself to be making complex programs. Learning programming isn't just going to be a walk in the park. You came in thinking, oh yeah, this is going to be easy. Write code here, write code there.No, it's not easy. >What I'm really confused with is static and abstract methods and data types.Jesus, this is OOP 101 right here. Were you even trying to understand the logical and conceptual side of programming? Programming is more than just coding.After reading more of your comments, I have to say; rethink your approach to programming, it's not all coding. Actually, put time and effort into learning Java. Put down the books, tutorials, and program, think, debug. 
Not to sound like a dick, but here's the requested opinion as is:----You're doing something very wrong.Every single example you've mentioned should be covered within the first couple days (if you have any programming experience) or weeks (if you are completely new).I cannot imagine what your learning process looks like if, after two years, you don't understand the language fundamentals.What do you do with your books?How much code do you actually write?What courses have you taken?Again, you wanted an opinion as-is, because you want to admit you're bad at this and you can do better, so yes.You seem VERY bad at this. I doubt you're dumb but you really need to take a step back and reevaluate your studying methods because whatever you're doing right now is not working.----If I were to guess how this is even possible, I would say you don't write much code. You read the books (if even, you said you bought them, I hope you read them), watch the videos  and assume that you will somehow learn by osmosis or something.----Open the official tutorial http://docs.oracle.com/javase/tutorial/java/TOC.htmlOpen your IDE.Read every single sentence. Don't assume you understand anything that is written there. Every single language concept you encounter requires that you actually toy around with it.You open your editor, write the code, run it. Don't copy-paste the code. Don't only write the exact same example.If your code compiles and you think you understand what is going on, write something little different to verify your assumptions. If that works, think about what would break it and why.Remember what you come up with (or write it down) and break the code. If anything does behave as you expected, find out why.This would take you some time but definitely less than what you spend on whatever you're doing right now.----edit: By the way, as I read the other replies, you seem to be collecting another set of resource to dive into. That's pointless. You're talking about basic things. You don't need the best course or the best book for that. You will not have enough time in your spare time to properly study these for another who knows how many months. You need to spend your time more effectively actually learning things (that means not jumping between concepts until you are 100% sure you understand the current basic thing you're reading about) rather than consuming all kinds of different books and courses.
I remember learning Java. Didn't go well.Then I tried C++. I now have a developing career in C++ and BAL. Yup, hated Java, love assembly language. 
Spend some time memorizing basic object oriented principles and their implementation in Java. Memorize what inheritance, encapsulation, polymorphism, and abstraction are. Then memorize all of the Java access control modifiers are and how they work. You should be able to do this in one or two study sessions, but try to find examples to help you understand.
> Is the language fundamentally hard to understand? Or am I just dumb? Please give opinions as-is, because I want to admit I'm bad at this so I can do better. Thanks! The choice of access modifier depends on what information and operations you want to expose in your class. I recommend [Controlling Access to Members of a Class](http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html).Back to your post, the `protected` access modifier allows you to expose a class member as you would with `public`, except that it is visible only to derived classes.
Java offers a lot of things that make collaborative programming easier but don't make sense when you only touch on them by yourself. You obviously are the only person who *has* to read your code. You can write code that is a carpet of anti patterns and doesn't use the features Java provides. Since you can't sniff out your own code smells even if you reek of them you wouldn't know where the problem is. Except that sometimes the compiler hates you.I would suggest that you use the code analyzer your IDE gives you. And ofc read a book. Also static and abstract methods are only means to a end. Maybe you wan't to check out http://java-design-patterns.com/
It's not just you, **Java is a terrible language**. Null errors seem like an annoyingly bad idea because they *absolutely are*, google billion dollar mistake to learn all about it. You might still want to learn Java even though it's a very bad language. It didn't get popular for being a good language, it got popular because it works OK on all the major platforms and it was aggressively marketed at the right time. Now lots of stuff works cross platform but they can't beat how Java was there *first* and thus it has the most extensive library coverage etc. You have to deal with how it has needless nulls and forces you to put everything on objects whether or not that paradigm helps with your problem and how it's astonishingly verbose and etc., but you get access to lots of libraries that do lots of cool stuff, so it could be worth it. You could also try an easier more sensible language, it will absolutely be easier and make more sense, but you'll also feel limited when there's something you want to do that there's no library for yet.
[removed]
Java is a very complicated language compared to say, C. Java also forces you to explicitly define certain structures which can be extremely unfriendly to beginners.For instance, Java forces you to explicitly make a main object and main function. Now, ruby _also_ has to have a main object, but it's implicit, which can make things way simpler for beginners. You can program in Ruby for quite some time and learn a lot without even knowing how to make your own objects.I went through the same thing and after trying some more beginner friendly languages, Java became a lot easier, if more verbose.To see what I mean, compare ruby hello world to java's.https://en.wikibooks.org/wiki/Ruby_Programming/Hello_worldhttp://introcs.cs.princeton.edu/java/11hello/HelloWorld.java.htmlWould strongly recommend trying a language like ruby or python with the learn the hard way books before giving up.
Thanks for your opinion. Yes, I've been dabbling in Java for over two years but I never said I got it right ;) I only do this in my spare time. Also, I use books written in Korean so I may have translated the terminology incorrectly. Sorry. If there's any resources you can share please do! It'll help me a lot. 
I found C++ to be a much easier to understand language personally
Glad someone said this. All too often people tend to try and dance around the fact that it's not just something anyone can pick up and master in their spare time.
Having read the comments, the original poster was never serious about programming, spent two years trying to code, but didn't understand how abstracts work, data types, or static.
The fact that he is still trying to get into it, especially after two years, is more than enough to warrant that he is capable. All it takes is desire. It's up to him if he wants to commit to it thoroughly. Hell, I've had on and off interests in programming for over two years. I always gave up after trying to set up an IDE, or trying to understand the shit ton of abstractions. Computers aren't easy (to say the least) and the intimidation/confusion that people get from it even after using them their whole lives is more than understandable. I seriously started programming when I started college, and I'm still a complete noob, but I got over the barrier that I almost gave up on hundreds of times after trying for so long.From the sound of it, it seems like he's still looking for that spark of motivation and interest to get him to go knee deep. If he keeps looking, I trust it will come
Out of curiosity, why do you say it's a boring language?
Thanks. I actually got bored reading the books sold by the local bookstore because it went into weird stuff like bit shifting when no video courses online ever mentioned bit shifting. After flipping through a few chapters, I just gave up reading the book. Instead of using official resources, I just tried making an Android app. It worked, I learned a fair bit more than the book could teach me, but that was partly the reason why I grew frustrated with the language. 
Thank you! I will check this resource out ASAP
Just random programming books in local bookshops. They do useless stuff like bit shifting so after a few chapters I got bored. 
Thank you! I will definitely check out the resources. As for the abnormally long time, I only code in my spare time. Coding isn't my main job. 
I found Swing to be relatively easy when I first dabbled into it.The oracle tutorials show literally everything you might want to do with Swing, too.
Thanks! I'll see if I can find a Kindle edition so I can read it on my tablet. Can't buy Amazon paperbacks because it take about a month to ship here with the cheapest shipping option. Also great work explaining how it works, thank you so much! 
Programming in many languages *is* easy. There's no reason there should be any difficulties, you can have it pre-programmed with solutions to any difficulties, *it is a fucking computer*. Some languages just make it difficult to say simple things, Java is the worst.
your teacher checking in!
Please, remove the link to your labs. If you want to pass them to OP, please do so in a private message.We cannot allow labs from courses to be posted here. Frequently, professors (legitimate, not just claiming to be) complain about such content and have us take it down. Should you not follow this request, I will take the comment down.
That's what I meant kinda. Either the books are not working, or your approach to education lack systemacy. I heard http://mooc.fi/courses/2013/programming-part-1/ is a good stuff. As for books Head First Java and Thinking in Java are a must.
??? #rvaluereferences
> it's not just something anyone can pick up and master in their spare time.disagree. I think the operative difference here is that OP *doesn't want* to learn the stuff he finds difficult or confusing, and passes it off as dumb or unintuitive because of it. anyone can learn as long as it is something they are both passionate and interested about.looking through his history, OP is still in high school (or just graduating). right now i can imagine he's a little naive, but if he really wants to make programs i feel like he can mature enough to get past his own issues with the language.
In this context, boring doesn't mean bad. It's one of those languages which borrowed things which worked and took very few risks. The result is something which works great for actual day-to-day usage, but it also won't contain anything which will drastically change the future of programming languages.Well, the good news is that taking this low-risk route also means that there probably won't be any features which turn out to be actually really terrible in practice.Dart, for example, is also a boring language, but it's my favorite one. It's terse and very nice to use. I don't really care that it's lacking in the novelty department.
How can you judge the level of content in the book if you don't understand the material and only flipped through some pages?
The bitwise operators aren't used that often, but they do have their uses.E.g. if you want to get the red, green, and blue values from a hexadecimal color literal (e.g. 0xBADA55), you have to use the `&` and `>>` operators:    r = (color24 & 0xff0000) >> 16;    g = (color24 & 0x00ff00) >> 8;    b = (color24 & 0x0000ff);This stuff is basically the same in all languages with C-like syntax. The 3 lines above where actually copied from Dart code.In JavaScript, `| 0` is often used for truncation. E.g. if you need a random number from 0-10 (exclusive):    Math.random() * 10 | 0
I also recommend this course, I think the instructor is quite good, it's up to date and it covers most of the Java basics.https://www.udemy.com/java-the-complete-java-developer-course/Get it on sale, you can have it for like $10.And don't forget, be consistent!
> They do useless stuff like bit shifting so after a few chaptersThat is anything but useless. You just can't see its use now because you lack context. Bit shifting is one of the most commonly used and powerful strategy in programming.
You might want to have a look at e.g. Head First Java (really different style, either you like it or not). Bit shifting is not bad to know, but I've never seen a book coming up with it in the first few chapters (besides mentioning the operator)
> As for the abnormally long time, I only code in my spare time. Coding isn't my main job.Still, even in your spare time it should have taken half a year at most.
Even so, I study to become a software engineer and we had 4 months of C and 4 months of C#, after which we were expected to be self sufficient in any programming language they might throw at us. 
It was, in my opinion, a simpler language. You didn't need to initozlize a variable for a scanner and for every input from the user do System.in, but hey that's me. #UnpopularOpinionOfTheDay haha
This is what irked me when I read this post. OP did not seem willing to put the effort in learning the things that *he* thought were useless. For example, he thinks `protected` is stupid without fully understanding its use-cases.
I felt like the book deviated from a lot of other resources I poked into. Of course, I only do this in my spare time so I didn't really devote myself to properly learn everything.Also, the book was 90% Korean explanation, 10% code.
Thanks! So I guess bit-shifting is useful, just not how I thought it would be.
>Bit shifting is one of the most commonly used and powerful strategy in programmingI wouldn't say most commonly used, but useful in some cases.
> Bit shifting is one of the most commonly used and powerful strategy in programming.It is a powerful strategy, but I wouldn't call it commonly used.  If you are using bit-shifting a lot in a professional programming environment, I'd question if you are using it correctly and if other devs will be able to understand your approach.
That's more of a stdlib issue
You summed up how I feel,it's irkesome how u/ideaman924 is approaching programming.
I didn't say they were useless and stupid. I just said I didn't understand *why* it was there. Because I don't understand the use case. Check my original post, please!
In my line of work, we make heavy use of bit packing and bit shifting because we have to transfer lots of on/off values over network and OPC. Each data item counts (and costs) so it is natural to utilize larger data types to compress information.Industrial automation has its own rules and requires a totally different style of programming. Bit manipulation is bread & butter for me. 
Sorry Garthmer. Then how should I approach programming?
> Industrial automation has its own rules and requires a totally different style of programming. Bit manipulation is bread & butter for me.Understandable.  I'm coming from a SaSS/Web Development environment, so the only time we take advantage of bit shifting is when we need to.
You're saying this is stupid, you were bored reading this. If you want to be a programmer, change your thinking. It sounds like you want a shortcut, a read this, do this, you'll understand it! way. You've been doing this for two years, think to yourself, do you want to spend another year wasting with Java? You need to stop learning Java, and learn object orientied programming. You're struggling with the concepts, not the langauge.
Consider the code as presented:    def __init__(self, name, text='', choices=['Continue'], text_input=False, image='test.jpg'):        self.name = name        self.text = text        self.choices = choices        self.text_input = text_input        self.image = image        self.active = FalseThis is a broken implementation and you're going to rip your hair out learning the hard lesson why.  You **must not** use mutable types as kwarg defaults.  This should be updated as:    def __init__(self, name, text='', choices=None, text_input=False, image='test.jpg'):        self.name = name        self.text = text        self.choices = choices or ['Continue']        self.text_input = text_input        self.image = image        self.active = FalseI've got a bunch of nitpicky stuff to point out, but you should fix the major breakages first.
Your comment led me to read [this explanation](http://reinout.vanrees.org/weblog/2012/04/18/default-parameters.html). I think I understand it now. Thanks, that would be a headache all right...
I would write my own sort method then, maybe bubble sort would be the easiest.  You can use the compareTo method of String and Date.
You can do a quick google search for sorting algorithms. The wikipedia page will go over the most common algorithms but is a bit dense for a beginner. My personal favorite for its ease of implementation is selection sort. The idea is to select the lowest value from the unsorted section of your array, then move that to the beginning, and find the next smallest value until you've sorted the entire list. 
What is this stuff supposed to be:    public void Logger (){     Logger log = new Logger();    }        public void add() {        String[] strings = {};    Date[] dates = {new Date(), new Date(), new Date(), new Date()};        }
The log constructor was to set the log with a value of null to start. The add fields were also set to empty strings and default dates. I took those out as I realized they were useless.
Oh, ok. That's not how a constructor is defined, by the way although you don't really need one in this case. for future reference, a constructor does not have a return type (you put it as *void*) and does not call `new` as the constructor is called by `new` in the main code.    class Foo {        int x;        int y;        public Foo(int x, int y) {            this.x = x;            this.y = y;        }    }
Haha Learn Python The Hard Way -> CS50 was my track to start out programming too! It's funny how CS50 starts off sorta normal and then gets super dense. It took me a long time to complete, and I had to turn to the internet for the hash tables homework (if he still has that). It's pretty fantastic.
Awesome! I bookmarked your blog and am looking forward to part two as I am in week 1 of CS50 right now. Thanks for taking the time to review it.
I'm still stuck on initials :( lol but I love it. Will definitely bookmark! 
Thanks for the review! Looking forward to the next two parts too!I just started week 0 yesterday.
Why did you choose to refer to yourself as a clarinet player, and not a clarinetist?
For 2016 you could choose either a hash table or tree. The two problem sets right around there were definitely where the difficulty peaked for me.
Thanks for the bookmark and the kind words! Sometimes I wonder who out there is actually going to read anything I wrote.Spoiler alert: it's going to be a glowing review series. Definitely stick wth the course.
It wasn't really a conscious decision. I guess the distinction isn't that big a deal to me. Maybe it would have been a few years ago.
Former concert violinist here. Never knew that there was such flexibility with that specific type of naming convention!
Why don't you write the code to test these things out, if this really isn't an exam you want us to do for you?
I will try. I am just the type of person where knowing the concepts before is preferred to writing it. And yeah, i know that is bad for programming.
Why not store the images on the file system?
For portability, base64-encoded array of bytes.
I've read that this will lead to portability problems
Then first I need to convert the image to a array of bytes and later store that array in my database?
I don't see how - programming languages have file libraries that work across all major OSes.
What platforms are you targeting? Since you're in C++ I'm assuming you're writing for desktop. I would wager that the biggest portability issue that would arise from running your program on different operating systems or filesystems is filename support. Some systems allow colons in filenames where others do not.I've had success with having the DB store only paths to the files.The advantage with storing the images as files is that if something goes wrong you can go in to where they are stored and modify them if needed.
Yes. Just have a byte pointer to your image bitmap, and [encode that to base64](http://stackoverflow.com/questions/342409/how-do-i-base64-encode-decode-in-c?noredirect=1&lq=1).
I'm on Desktop. Any example code to store the paths of the files?
Thanks, dude!
Community colleges offer two-year programs. Additionally if you're state-side, look into FAFSA to see how much the gov't will chip in
Don't bother. You can learn on your own time, if you have a computer and Internet access. If you make some portfolio projects, no-one will care that you don't have a qualification. 
Udacity nanodegrees
Like /u/brbpizzatime said, community college is an option. I dont know if you would consider a coding bootcamp what you are looking for. Some have payment plans and others dont have any payment requirements until after you are employed.EDIT: Many are 12 weeks long and some go for a bit longer. Some also have different schedules depending on how much time you can invest per week.
Community College is an excellent platform to start. Unfortunately if you live somewhere INCREDIBLY rural the instruction might be outdated. The best way to start programming is to follow any of the free toolkits mentioned here. I started with codeschool's python module (I worked through it and thought their approach was wonderful) and then look into what *type* of software engineer you want to be. * Do you want to work with big data, do machine learning, or general robotics and AI? * Do you want to build websites?* Do you want to build applications (desktop, mobile, web)?* Do you want to maintain databases?* Do you want to be a system admin?* Do you want to build tools for a company, such as using programming to build the next Photoshop?* Do you want to program games, 3d animation, or effects?* And many more options!There's a lot of questions you should figure out, but the best way to get started is to follow an online walk-through and get things set-up on your computer. :) There is no wrong place to start either. 
Coding bootcamps are usually 3 - 6 months and can be taken in-state, out-of-state, or online. Prices can range from $5,000 to $20,000 depending on the school so your research before committing one. Read up on student reviews of the school on [CourseReport](http://coursereport.com/), [SwitchUp](https://www.switchup.org/coding-bootcamps-reviews), [Thinkful]( https://www.thinkful.com/bootcamps/), Quora, Yelp, and Reddit and speak to the owners, instructors, or former students if you can. Take note that some schools have raffles for students who write review or have cohorts small enough that so that they can narrow who gave them a poor review. This can put pressure on students to write reviews more positive than their actual thoughts on the program. There are also free alternatives. [FreeCodeCamp](https://www.freecodecamp.com/) has Front End, Data Visualization, Back End, and Full Stack certifications, and also includes a coding interview training course available once you've earned all 4 certifications. A few days ago, there was a [reddit post](https://www.reddit.com/r/learnprogramming/comments/5si7dm/were_putting_on_a_100_free_code_bootcamp_for/) for [LambdaSchool](https://lambdaschool.com/mini-bootcamp), which looks like another free online coding bootcamp.If you want to go the self-taught route, there are cheaper websites where you can view courses like [PluralSight](https://www.pluralsight.com/), [Cousera](http://coursera.org/), [Udacity](http://udacity.com/), and [Udemy](http://udemy.com/). Some of these sites have recommended learning paths to structure your learning.
You're taking a smart route. Learn a trade. Feed yourself and pay bills. Then, at a later date, pursue a degree if necessary. Otherwise those loans will burden you seemingly forever. Source: Teacher. Wife and I have masters and live in a shitty house in a low income area because of our loan bills.  But (huge but) we're happy as clams so we don't really care. 
Bootcamps are the first incarnation of coding trade schools. All the resources you'll ever need are online. So if you're self driven enough then you can do it without needing to pay them to hand hold you through it. You must be sure you're disciplined enough otherwise you are wasting your own time.
JSON is used by a ton of thing for passing data around. There are only a few languages used on the web.. HTML, CSS, Javascript (since it sounds like you're talking about front end stuff), but a large number of frameworks/libraries/whatevers which build upon those foundations... most of which are now build mobile first and handle automatically changing screen sizes.
You could print the array after each operation and see how the elements have changed.
That's what I did, in the last code comment which is my output. You can see that the second to last number in the queue gets turned into a junk number and so on. Hard to make sense of it 
You're not printing the array, and I don't see what code does the printing you are doing.
To remove the elements in the queue I had    while (queue.size() != 0) // queue.size returns capacity    {        for (int i = 1; i < capacity + 1; i++)        {            cout << ID:  << queue[i].ID << endl;            cout << Priority:  << queue[i].priorityNum << endl;            cout << endl;        }    }
Change your code so you're not mixing IO with other things.  Write functions that produce something testable without using print in them.
Does it matter if it's javascript or Java? 
Did you read the instructions?
Savage!
